// Prisma schema for Lead Management System
// Update your DATABASE_URL in .env (see .env.example)

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Lead lifecycle stages based on provided flowchart
enum LeadStage {
  ENTRADA
  QUALIFICACAO
  INTERESSE
  APRESENTACAO
  PROPOSTA
  CRIACAO_DO_GRUPO
  IMPLANTACAO
  CADASTRO_E_COBRANCA
}

enum Role {
  USER
  ADMIN
}

model User {
  id           String        @id @default(cuid())
  email        String        @unique
  name         String
  passwordHash String
  role         Role          @default(USER)
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  interactions Interaction[]
}

model Lead {
  id            String        @id @default(cuid())
  name          String
  phone         String?
  email         String?
  source        String? // indicacao, evento, redes sociais, ex cliente, parceiro
  company       String?
  notes         String?
  contractValue Decimal?      @db.Decimal(12, 2)
  canViewValue  Boolean       @default(true) // safeguard flag, UI also protects by role
  stage         LeadStage     @default(ENTRADA)
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
  interactions  Interaction[]
}

model Interaction {
  id        String   @id @default(cuid())
  content   String
  createdAt DateTime @default(now())
  leadId    String
  userId    String?
  lead      Lead     @relation(fields: [leadId], references: [id], onDelete: Cascade)
  user      User?    @relation(fields: [userId], references: [id])
}

model Webhook {
  id        String   @id @default(cuid())
  name      String
  url       String
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
